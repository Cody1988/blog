package com.swayam.demo.jini.unsecure.streaming.client;

import java.awt.EventQueue;
import java.rmi.RemoteException;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import com.swayam.demo.jini.unsecure.streaming.api.dto.BankDetail;
import com.swayam.demo.jini.unsecure.streaming.api.service.BankDetailService;
import com.swayam.demo.jini.unsecure.streaming.api.service.RemoteDataListener;

import net.jini.export.Exporter;
import net.jini.jeri.BasicILFactory;
import net.jini.jeri.BasicJeriExporter;
import net.jini.jeri.tcp.TcpServerEndpoint;

public class RmiStreamingDemoFrame extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    private final BankDetailService bankDetailService;

    private final DefaultListModel<BankDetail> streamedDataModel;

    /**
     * Creates new form RmiStreamingDemoFrame
     */
    public RmiStreamingDemoFrame(BankDetailService bankDetailService) {
	this.bankDetailService = bankDetailService;
	streamedDataModel = new DefaultListModel<>();
	initComponents();
	listStreamedData.setModel(streamedDataModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

	btnStartStreaming = new javax.swing.JButton();
	pnlStreamedData = new javax.swing.JPanel();
	scrPnlStreamedData = new javax.swing.JScrollPane();
	listStreamedData = new javax.swing.JList<>();

	setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

	btnStartStreaming.setText("Start Streaming");
	btnStartStreaming.addActionListener(new java.awt.event.ActionListener() {
	    public void actionPerformed(java.awt.event.ActionEvent evt) {
		btnStartStreamingActionPerformed(evt);
	    }
	});

	pnlStreamedData.setBorder(javax.swing.BorderFactory.createTitledBorder("Streamed Data"));
	pnlStreamedData.setLayout(new java.awt.BorderLayout());

	scrPnlStreamedData.setPreferredSize(new java.awt.Dimension(300, 400));

	listStreamedData.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
	scrPnlStreamedData.setViewportView(listStreamedData);

	pnlStreamedData.add(scrPnlStreamedData, java.awt.BorderLayout.CENTER);

	javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
	getContentPane().setLayout(layout);
	layout.setHorizontalGroup(
		layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(pnlStreamedData, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
			.addGroup(layout.createSequentialGroup().addGap(179, 179, 179)
				.addComponent(btnStartStreaming, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
				.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
	layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
		layout.createSequentialGroup().addContainerGap(25, Short.MAX_VALUE).addComponent(btnStartStreaming).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
			.addComponent(pnlStreamedData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));

	pack();
	setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartStreamingActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnStartStreamingActionPerformed

	btnStartStreaming.setEnabled(false);

	streamedDataModel.removeAllElements();

	RemoteDataListener<BankDetail> remoteDataListener = new RemoteDataListener<BankDetail>() {

	    @Override
	    public void newData(BankDetail data) {
		EventQueue.invokeLater(new Runnable() {
		    @Override
		    public void run() {
			streamedDataModel.addElement(data);
			// try {
			// Thread.sleep(100);
			// } catch (InterruptedException e) {
			// e.printStackTrace();
			// }
		    }
		});
	    }

	    @Override
	    public void endOfData() {
		EventQueue.invokeLater(new Runnable() {
		    @Override
		    public void run() {
			JOptionPane.showMessageDialog(RmiStreamingDemoFrame.this, "All data streamed successfully", "End of data", JOptionPane.INFORMATION_MESSAGE);
			btnStartStreaming.setEnabled(true);
		    }
		});
	    }
	};

	try {
	    Exporter exporter = new BasicJeriExporter(TcpServerEndpoint.getInstance(0), new BasicILFactory());
	    @SuppressWarnings("unchecked")
	    RemoteDataListener<BankDetail> exportedRemoteDataListener = (RemoteDataListener<BankDetail>) exporter.export(remoteDataListener);
	    bankDetailService.streamAllBankDetails(exportedRemoteDataListener);
	} catch (RemoteException e) {
	    throw new RuntimeException(e);
	}

    }// GEN-LAST:event_btnStartStreamingActionPerformed

    /**
     * @param args
     *            the command line arguments
     */
    public static void main(String args[]) {
	/* Set the Nimbus look and feel */
	// <editor-fold defaultstate="collapsed" desc=" Look and feel setting
	// code (optional) ">
	/*
	 * If Nimbus (introduced in Java SE 6) is not available, stay with the
	 * default look and feel. For details see
	 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
	 * html
	 */
	try {
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
		if ("Nimbus".equals(info.getName())) {
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	} catch (ClassNotFoundException ex) {
	    java.util.logging.Logger.getLogger(RmiStreamingDemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (InstantiationException ex) {
	    java.util.logging.Logger.getLogger(RmiStreamingDemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (IllegalAccessException ex) {
	    java.util.logging.Logger.getLogger(RmiStreamingDemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (javax.swing.UnsupportedLookAndFeelException ex) {
	    java.util.logging.Logger.getLogger(RmiStreamingDemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	// </editor-fold>

	SpringContextHelper springContextHelper = new SpringContextHelper();

	/* Create and display the form */
	java.awt.EventQueue.invokeLater(new Runnable() {
	    public void run() {
		new RmiStreamingDemoFrame(springContextHelper.getBankDetailService()).setVisible(true);
	    }
	});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStartStreaming;
    private javax.swing.JList<BankDetail> listStreamedData;
    private javax.swing.JPanel pnlStreamedData;
    private javax.swing.JScrollPane scrPnlStreamedData;
    // End of variables declaration//GEN-END:variables
}
